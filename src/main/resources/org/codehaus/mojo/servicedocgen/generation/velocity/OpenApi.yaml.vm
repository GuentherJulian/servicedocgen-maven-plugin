openapi: 3.0.0
info:
  title: $services.info.title
  version: $services.info.version
  description: $services.info.description
  contact:
    name: $services.info.contact.name
    url: $services.info.contact.url
    email: $services.info.contact.email
  license:
    name: $services.info.license.name
    url: $services.info.license.url
    
paths:
#foreach ($service in $services.services)
#foreach ($operation in $service.operations)
#set( $previousIndex = $foreach.index - 1)
#if($foreach.index == 0 || $service.operations.get($foreach.index).path != $service.operations.get($previousIndex).path)
  $service.basePath$operation.path:
#end
    $operation.httpMethod:
      description: $operation.description
      operationId: $operation.id
#if($operation.httpMethod == "post" && $operation.parameters.size() == 1)
      requestBody:
        content:
          $display.list($operation.produces):
            schema:
#if($operation.getParameters().get(0).javaParameter.getSourceType().isPrimitive())
#set($type = $operation.getParameters().get(0).javaParameter.byteTypeString)
#if($type == "int" || $type == "long" || $type == "byte")
              type: integer
#elseif($type == "float" || $type == "double")
              type: number
#elseif($type == "boolean")
              type: boolean
#end                  
#else
#if($operation.getParameters().get(0).javaParameter.byteTypeString == "String")
              type: string
#else
#if(!$operation.getParameters().get(0).javaParameter.getByteType().getComponentType())
              $ref: '#/components/schemas/$operation.getParameters().get(0).javaParameter.getByteType().getAssignmentClass().getSimpleName()'
#else
              type: array
              items:
                $ref: '#/components/schemas/$operation.getParameters().get(0).javaParameter.getByteType().getComponentType().getAssignmentClass().getSimpleName()'
#end
#end
#end      
#elseif($operation.parameters.size() > 0 )
      parameters:
#foreach ($parameter in $operation.parameters)
        - name: $parameter.name
          in: $parameter.location
          description: $parameter.description
#if($parameter.location == "path")
          required: true
#else
          required: $parameter.required
#end
          schema:
#if($parameter.javaParameter.getSourceType().isPrimitive())
#set($type = $parameter.javaParameter.byteTypeString)
#if($type == "int" || $type == "long" || $type == "byte")
            type: integer
#elseif($type == "float" || $type == "double")
            type: number
#elseif($type == "boolean")
            type: boolean
#end                  
#else
#if($parameter.javaParameter.byteTypeString == "String")
            type: string
#else
#if(!$parameter.javaParameter.getByteType().getComponentType())
            $ref: '#/components/schemas/$parameter.javaParameter.getByteType().getAssignmentClass().getSimpleName()'
#else
            type: array
            items:
              $ref: '#/components/schemas/$parameter.javaParameter.getByteType().getComponentType().getAssignmentClass().getSimpleName()'
#end
#end
#end
#end
#end
      responses:
#foreach ($response in $operation.responses)
        '$response.statusCode':
          description: $response.description
#if($response.javaElement.byteTypeString != "void" && $response.statusCode == 200)
          content:
            $display.list($operation.produces): 
              schema: 
#if($response.javaElement.getSourceType().isPrimitive())
#set($type = $response.javaElement.byteTypeString)
#if($type == "int" || $type == "long" || $type == "byte")
                type: integer
#elseif($type == "float" || $type == "double")
                type: number
#elseif($type == "boolean")
                type: boolean
#end                  
#else
#if($response.javaElement.byteTypeString == "String")
                type: string
#else
#if(!$response.javaElement.getByteType().getComponentType())
                $ref: '#/components/schemas/$response.javaElement.getByteType().getAssignmentClass().getSimpleName()'
#else
                type: array
                items:
                  $ref: '#/components/schemas/$response.javaElement.getByteType().getComponentType().getAssignmentClass().getSimpleName()'
#end
#end
#end
#end
#end

#end
#end
components:
  schemas:
$services.getSchemaDefinitionYaml()